{"version":3,"sources":["App.tsx","Good.tsx","GoodsList.tsx","index.tsx"],"names":["SortType","Good","good","GoodsList","goods","map","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","prevState","sortByName","ALPHABET","sortByLength","LENGTH","reset","this","goodToRender","visibleGoods","sort","g1","g2","localeCompare","length","getReorderedGoods","wasItSorted","className","type","onClick","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,wGCbQC,EAAwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtC,OACE,oBAAI,UAAQ,OAAZ,SAAoBA,KCDXC,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,6BACGA,EAAMC,KAAI,SAAAH,GACT,OAAO,cAAC,EAAD,CAAiBA,KAAMA,GAAZA,SFLbI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IA6BaO,EAAb,4MACEC,MAAc,CACZC,YAAY,EACZC,SAAUV,EAASW,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,YAAaK,EAAUL,gBAR7B,EAYEM,WAAa,WACX,EAAKF,SAAS,CAAEH,SAAUV,EAASgB,YAbvC,EAgBEC,aAAe,WACb,EAAKJ,SAAS,CAAEH,SAAUV,EAASkB,UAjBvC,EAoBEC,MAAQ,WACN,EAAKN,SAAS,CACZH,SAAUV,EAASW,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAAiCW,KAAKZ,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZY,EA1DgB,SACxBjB,EADwB,GAGpB,IADFM,EACC,EADDA,SAAUD,EACT,EADSA,WAENa,EAAY,YAAOlB,GAiBzB,OAfAkB,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKV,EAASgB,SACZ,OAAOQ,EAAGE,cAAcD,GAC1B,KAAKzB,EAASkB,OACZ,OAAOM,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAITlB,GACFa,EAAaV,UAGRU,EAsCDM,CAAkBtB,EAAiBc,KAAKZ,OAEtCqB,EAAcnB,IAAaV,EAASW,OAAuB,IAAfF,EAElD,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAASZ,KAAKL,WACde,UAAWG,IAAW,SAAU,UAAW,CACzC,WAAYvB,IAAaV,EAASgB,WAJtC,iCAUA,wBACEe,KAAK,SACLC,QAASZ,KAAKH,aACda,UAAWG,IAAW,SAAU,aAAc,CAC5C,WAAYvB,IAAaV,EAASkB,SAJtC,4BAUA,wBACEa,KAAK,SACLC,QAASZ,KAAKR,QACdkB,UAAWG,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAfxB,IAJhB,sBAUEoB,GACA,wBACEE,KAAK,SACLC,QAASZ,KAAKD,MACdW,UAAU,4BAHZ,sBAUJ,cAAC,EAAD,CAAW1B,MAAOiB,WA9E1B,GAAyBa,IAAMC,WGxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2de02343.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nconst getReorderedGoods = (\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state:State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  sortByName = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const goodToRender\n      = getReorderedGoods(goodsFromServer, this.state);\n\n    const wasItSorted = sortType === SortType.NONE && isReversed === false;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={this.sortByName}\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.sortByLength}\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.reverse}\n            className={classNames('button', 'is-warning', {\n              'is-light': isReversed === false,\n            })}\n          >\n            Reverse\n          </button>\n\n          {!wasItSorted && (\n            <button\n              type=\"button\"\n              onClick={this.reset}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodsList goods={goodToRender} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  good:string\n};\n\nexport const Good: React.FC<Props> = ({ good }) => {\n  return (\n    <li data-cy=\"Good\">{good}</li>\n  );\n};\n","import React from 'react';\nimport { Good } from './Good';\n\ntype Props = {\n  goods: string[]\n};\n\nexport const GoodsList:React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => {\n        return <Good key={good} good={good} />;\n      })}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}